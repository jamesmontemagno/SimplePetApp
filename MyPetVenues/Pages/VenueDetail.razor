@page "/venues/{Id:int}"
@inject IVenueService VenueService
@inject NavigationManager Navigation

<PageTitle>@(venue?.Name ?? "Venue Details") - Pet-Friendly Places</PageTitle>

@if (isLoading)
{
    <div class="loading-container">
        <div class="loading">
            <p>üîç Loading venue details...</p>
        </div>
    </div>
}
else if (venue == null)
{
    <div class="not-found">
        <h2>üö´ Venue Not Found</h2>
        <p>Sorry, we couldn't find the venue you're looking for.</p>
        <a href="/venues" class="btn btn-primary">‚Üê Back to Browse Venues</a>
    </div>
}
else
{
    <div class="venue-detail">
        <div class="venue-hero">
            @if (!string.IsNullOrEmpty(venue.ImageUrl))
            {
                <img src="@venue.ImageUrl" alt="@venue.Name" class="hero-image" />
            }
            else
            {
                <div class="hero-placeholder">@GetCategoryEmoji(venue.Category)</div>
            }
            
            <div class="hero-content">
                <div class="venue-breadcrumb">
                    <a href="/venues">‚Üê Browse Venues</a>
                </div>
                
                <h1>@venue.Name</h1>
                <div class="venue-meta">
                    <span class="category">@GetCategoryEmoji(venue.Category) @GetDisplayName(venue.Category)</span>
                    <span class="location">üìç @venue.Address, @venue.City, @venue.State @venue.ZipCode</span>
                </div>
                
                <div class="rating-section">
                    <div class="stars">@GenerateStars(venue.Rating)</div>
                    <span class="rating-text">@venue.Rating.ToString("F1") out of 5 (@venue.ReviewCount reviews)</span>
                </div>
            </div>
        </div>

        <div class="venue-details-content">
            <div class="main-content">
                <section class="description-section">
                    <h2>About This Venue</h2>
                    <p>@venue.Description</p>
                </section>

                <section class="pet-policy-section">
                    <h2>üêæ Pet Policy</h2>
                    <div class="pet-types-grid">
                        <div class="allowed-pets">
                            <h3>Welcomes:</h3>
                            <div class="pet-types-list">
                                @foreach (var petType in venue.AllowedPetTypes)
                                {
                                    <div class="pet-type-item">
                                        <span class="pet-emoji">@GetPetEmoji(petType)</span>
                                        <span>@GetDisplayName(petType)</span>
                                    </div>
                                }
                            </div>
                        </div>
                        
                        @if (venue.Restrictions.Count > 0)
                        {
                            <div class="restrictions">
                                <h3>‚ö†Ô∏è Important Notes:</h3>
                                <ul>
                                    @foreach (var restriction in venue.Restrictions)
                                    {
                                        <li>@restriction</li>
                                    }
                                </ul>
                            </div>
                        }
                    </div>
                </section>

                @if (venue.Amenities.Count > 0)
                {
                    <section class="amenities-section">
                        <h2>üåü Amenities</h2>
                        <div class="amenities-grid">
                            @foreach (var amenity in venue.Amenities)
                            {
                                <div class="amenity-item">
                                    <span class="amenity-icon">‚úÖ</span>
                                    <span>@amenity</span>
                                </div>
                            }
                        </div>
                    </section>
                }
            </div>

            <div class="sidebar">
                <div class="contact-card">
                    <h3>üìû Contact Information</h3>
                    
                    @if (!string.IsNullOrEmpty(venue.Phone))
                    {
                        <div class="contact-item">
                            <strong>Phone:</strong>
                            <a href="tel:@venue.Phone">@venue.Phone</a>
                        </div>
                    }
                    
                    @if (!string.IsNullOrEmpty(venue.Website))
                    {
                        <div class="contact-item">
                            <strong>Website:</strong>
                            <a href="@venue.Website" target="_blank" rel="noopener">Visit Website ‚Üó</a>
                        </div>
                    }
                    
                    <div class="contact-item">
                        <strong>Address:</strong>
                        <div class="address">
                            @venue.Address<br>
                            @venue.City, @venue.State @venue.ZipCode
                        </div>
                    </div>
                </div>

                <div class="quick-actions">
                    <button class="btn btn-primary" @onclick="ShareVenue">
                        üì§ Share This Venue
                    </button>
                    <button class="btn btn-secondary" @onclick="SaveToFavorites">
                        ‚≠ê Save to Favorites
                    </button>
                </div>
            </div>
        </div>
    </div>
}

@code {
    [Parameter] public int Id { get; set; }

    private Venue? venue;
    private bool isLoading = true;

    protected override async Task OnInitializedAsync()
    {
        await LoadVenue();
    }

    protected override async Task OnParametersSetAsync()
    {
        if (venue?.Id != Id)
        {
            await LoadVenue();
        }
    }

    private async Task LoadVenue()
    {
        isLoading = true;
        StateHasChanged();

        venue = await VenueService.GetVenueByIdAsync(Id);
        isLoading = false;
        StateHasChanged();
    }

    private string GetDisplayName(Enum value)
    {
        var field = value.GetType().GetField(value.ToString());
        var attribute = field?.GetCustomAttributes(typeof(System.ComponentModel.DataAnnotations.DisplayAttribute), false)
                              .FirstOrDefault() as System.ComponentModel.DataAnnotations.DisplayAttribute;
        return attribute?.Name ?? value.ToString();
    }

    private string GetCategoryEmoji(VenueCategory category) => category switch
    {
        VenueCategory.Cafe => "‚òï",
        VenueCategory.Restaurant => "üçΩÔ∏è",
        VenueCategory.Park => "üå≥",
        VenueCategory.Hotel => "üè®",
        VenueCategory.Beach => "üèñÔ∏è",
        VenueCategory.Trail => "ü•æ",
        VenueCategory.Shop => "üõçÔ∏è",
        VenueCategory.Grooming => "‚úÇÔ∏è",
        VenueCategory.Veterinary => "üè•",
        _ => "üìç"
    };

    private string GetPetEmoji(PetType petType) => petType switch
    {
        PetType.Dog => "üê∂",
        PetType.Cat => "üê±",
        PetType.Bird => "üê¶",
        PetType.Rabbit => "üê∞",
        PetType.Reptile => "ü¶é",
        PetType.Fish => "üê†",
        PetType.SmallAnimal => "üêπ",
        PetType.FarmAnimal => "üêé",
        _ => "üêæ"
    };

    private string GenerateStars(double rating)
    {
        var fullStars = (int)rating;
        var hasHalfStar = rating - fullStars >= 0.5;
        var stars = new string('‚òÖ', fullStars);
        if (hasHalfStar) stars += "‚òÜ";
        return stars.PadRight(5, '‚òÜ');
    }

    private void ShareVenue()
    {
        // Placeholder for sharing functionality
        Console.WriteLine($"Sharing venue: {venue?.Name}");
    }

    private void SaveToFavorites()
    {
        // Placeholder for favorites functionality
        Console.WriteLine($"Saving to favorites: {venue?.Name}");
    }
}